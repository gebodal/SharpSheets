<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<SolidColorBrush x:Key="TextAreaBackground" Color="#1e1e1e" />

	<Style TargetType="{x:Type ScrollViewer}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid x:Name="Grid" Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Rectangle x:Name="Corner" Grid.Column="1" Fill="{TemplateBinding Background}" Grid.Row="1"/>
						<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
						<ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
						<ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Grid x:Name="Grid">
						<Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
						<Border x:Name="ScrollBarRectangle" CornerRadius="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Tag" Value="Horizontal">
							<Setter TargetName="ScrollBarRectangle" Property="Width" Value="Auto" />
							<Setter TargetName="ScrollBarRectangle" Property="Height" Value="14" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ScrollBar}">
		<Setter Property="Margin" Value="0,0,0,0" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="false" />
		<Setter Property="Foreground" Value="#FF8C8C8C" />
		<Setter Property="Background" Value="#3e3e42" />
		<Setter Property="Width" Value="14" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<Grid x:Name="GridRoot" Width="14" Background="{TemplateBinding Background}">
						<Track x:Name="PART_Track" IsDirectionReversed="true" Focusable="false">
							<Track.Thumb>
								<Thumb x:Name="ScrollBarThumb" Background="{TemplateBinding Foreground}" Style="{StaticResource ScrollThumbs}"/>
							</Track.Thumb>
							<Track.IncreaseRepeatButton>
								<RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
							</Track.IncreaseRepeatButton>
							<Track.DecreaseRepeatButton>
								<RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
							</Track.DecreaseRepeatButton>
						</Track>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="ScrollBarThumb" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="Orientation" Value="Horizontal">
							<Setter TargetName="GridRoot" Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="-90" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="PART_Track" Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="-90" />
								</Setter.Value>
							</Setter>
							<Setter Property="Width" Value="Auto" />
							<Setter Property="Height" Value="14" />
							<Setter TargetName="ScrollBarThumb" Property="Tag" Value="Horizontal" />
							<Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
							<Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Foreground" Value="#9e9e9e"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--
	<Style TargetType="{x:Type MenuItem}">
		<Setter Property="Background" Value="#2d2d30" />
	</Style>
	-->

	<!-- https://stackoverflow.com/questions/53221228/how-to-remove-border-of-menuitem-of-sub-menuitem-in-wpf -->
	<ControlTemplate x:Key="MenuItemControlTemplate1" TargetType="{x:Type MenuItem}">
		<Border x:Name="templateRoot" BorderBrush="Yellow" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
			<Grid VerticalAlignment="Center">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
				<Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="0" Visibility="Collapsed" VerticalAlignment="Center"/>
				<ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
				<Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
					<Border x:Name="SubMenuBorder" BorderBrush="LightGray" BorderThickness="0.75" Background="{StaticResource TextAreaBackground}" Padding="0">
						<ScrollViewer x:Name="SubMenuScrollViewer" 
								Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}"
								Background="#383838" Margin="0" Padding="0">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
									<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
								</Canvas>
								<Rectangle Fill="Green" HorizontalAlignment="Left" Margin="0" Width="0"/>
								<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
							</Grid>
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="True">
				<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
			</Trigger>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter Property="Background" TargetName="templateRoot" Value="#3e3e40"/>
				<Setter Property="BorderBrush" TargetName="templateRoot" Value="Yellow"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="Magenta"/>
				<Setter Property="Fill" TargetName="GlyphPanel" Value="Magenta"/>
			</Trigger>
			<Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
				<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
				<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocusWithin" Value="True">
				<Setter TargetName="templateRoot" Property="Background" Value="#1e1e1e" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style TargetType="Button" x:Key="SubtleButton" >
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Margin" Value="1,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}"
								SnapsToDevicePixels="True"
								Padding="3">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<!--
							<Setter Property="Background">
								<Setter.Value>
									<SolidColorBrush Color="#d3d3d3" Opacity="0.2" />
								</Setter.Value>
							</Setter>
							<Setter Property="BorderBrush" TargetName="border">
								<Setter.Value>
									<SolidColorBrush Color="#d3d3d3" Opacity="0.5" />
								</Setter.Value>
							</Setter>
							-->
							<Setter Property="Background" Value="#5d5d61"/>
						</Trigger>
						<Trigger Property="IsMouseCaptured" Value="True">
							<Setter Property="Background" Value="#1e1e1e"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="0.30" />
			</Trigger>
		</Style.Triggers>
	</Style>
	
	<Style TargetType="ToggleButton" x:Key="SubtleToggleButton">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Margin" Value="1,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="border"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							SnapsToDevicePixels="True"
							Padding="0">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background">
								<Setter.Value>
									<SolidColorBrush Color="#d3d3d3" Opacity="0.2" />
								</Setter.Value>
							</Setter>
							<Setter Property="BorderBrush" TargetName="border">
								<Setter.Value>
									<SolidColorBrush Color="#d3d3d3" Opacity="0.5" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True"/>
								<Condition Property="IsMouseOver" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background">
								<Setter.Value>
									<SolidColorBrush Color="#1e1e1e" Opacity="0.2" />
								</Setter.Value>
							</Setter>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True"/>
								<Condition Property="IsMouseOver" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background">
								<Setter.Value>
									<SolidColorBrush Color="#d3d3d3" Opacity="0.2" />
								</Setter.Value>
							</Setter>
						</MultiTrigger>
						<Trigger Property="IsMouseCaptured" Value="True">
							<Setter Property="Background" Value="#1e1e1e"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- https://stackoverflow.com/questions/53221228/how-to-remove-border-of-menuitem-of-sub-menuitem-in-wpf -->
	<ControlTemplate x:Key="SharpMenuBarItem" TargetType="{x:Type MenuItem}">
		<Border x:Name="templateRoot" BorderBrush="Red" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
			<Grid VerticalAlignment="Center">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter
						x:Name="Icon"
						Content="{TemplateBinding Icon}"
						ContentSource="Icon"
						HorizontalAlignment="Center"
						Height="16"
						Margin="3"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						VerticalAlignment="Center" Width="16"/>
				<Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="0" Visibility="Collapsed" VerticalAlignment="Center"/>
				<ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" TextBlock.Foreground="LightGray" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
				<Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
					<Border x:Name="SubMenuBorder" BorderBrush="LightGray" BorderThickness="0.75" Background="{StaticResource TextAreaBackground}" Padding="0">
						<ScrollViewer x:Name="SubMenuScrollViewer" 
								  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}"
								  Background="#383838" Margin="0" Padding="0">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<!--
									<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
										<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
									</Canvas>
									<Rectangle Fill="Green" HorizontalAlignment="Left" Margin="0" Width="0"/>
									-->
								<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
							</Grid>
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="True">
				<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
			</Trigger>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter Property="Background" TargetName="templateRoot" Value="#3e3e40"/>
				<Setter Property="BorderBrush" TargetName="templateRoot" Value="Yellow"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="Magenta"/>
				<Setter Property="Fill" TargetName="GlyphPanel" Value="Magenta"/>
			</Trigger>
			<!--
				<Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
					<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
					<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
				</Trigger>
				-->
			<Trigger Property="IsKeyboardFocusWithin" Value="True">
				<Setter TargetName="templateRoot" Property="Background" Value="#1e1e1e" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<BooleanToVisibilityConverter x:Key="btv" />

	<ControlTemplate x:Key="SharpMenuDropdownItem" TargetType="{x:Type MenuItem}">
		<Border
				x:Name="templateRoot"
				BorderBrush="Yellow"
				BorderThickness="0"
				Background="{StaticResource TextAreaBackground}"
				SnapsToDevicePixels="True">
			<Grid x:Name="templateGrid" VerticalAlignment="Center" Height="23" MinWidth="185">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="35"/>
					<ColumnDefinition Width="*" SharedSizeGroup="MenuItemHeaderSize"/>
					<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemGestureTextSize"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<Border
						x:Name="IconPanel" Grid.Column="0"
						Height="18" Width="18" Margin="5,0,0,0"
						Padding="1"
						VerticalAlignment="Center" HorizontalAlignment="Left"
						BorderThickness="0"
						Background="Transparent">
					<ContentPresenter
							x:Name="Icon"
							Content="{TemplateBinding Icon}"
							ContentSource="Icon"
							HorizontalAlignment="Left"
							Height="16" Width="16"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							VerticalAlignment="Center"/>
				</Border>
				<Border
						x:Name="TickPanel"
						Grid.Column="0"
						Height="16" Width="16" Margin="5,0,0,0"
						VerticalAlignment="Center" HorizontalAlignment="Left"
						Visibility="Collapsed">
					<Border.Background>
						<SolidColorBrush Color="#d3d3d3" Opacity="0.2" />
					</Border.Background>
					<Image
							Margin="2"
							Source="Images/Tick.png"
							VerticalAlignment="Center" HorizontalAlignment="Center"
							Stretch="Fill"/>
				</Border>
				<ContentPresenter
						x:Name="HeaderPanel"
						ContentTemplate="{TemplateBinding HeaderTemplate}"
						Content="{TemplateBinding Header}"
						Grid.Column="1"
						ContentStringFormat="{TemplateBinding HeaderStringFormat}"
						ContentSource="Header"
						TextBlock.Foreground="LightGray"
						Margin="{TemplateBinding Padding}"
						HorizontalAlignment="Left" VerticalAlignment="Center"
						RecognizesAccessKey="True"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
				<ContentPresenter
						x:Name="ShortcutText"
						Grid.Column="2"
						Content="{TemplateBinding InputGestureText}"
						ContentSource="InputGestureText"
						TextBlock.Foreground="DimGray"
						HorizontalAlignment="Left"
						Margin="25,3,3,3"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						VerticalAlignment="Center"/>
				<Image
						x:Name="DropDownArrow"
						Source="Images/RightArrow2.png"
						Grid.Column="3"
						Height="16" Width="16"
						VerticalAlignment="Center" HorizontalAlignment="Right"
						Visibility="{Binding HasItems, Converter={StaticResource btv}, RelativeSource={RelativeSource TemplatedParent}}"/>
				<Popup x:Name="PART_Popup"
						   AllowsTransparency="True"
						   Focusable="False"
						   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
						   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
						   Placement="Right">
					<Border
							x:Name="SubMenuBorder"
							BorderBrush="LightGray"
							BorderThickness="0.75"
							Background="{StaticResource TextAreaBackground}"
							Padding="0">
						<ScrollViewer
								x:Name="SubMenuScrollViewer" 
								Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}"
								Background="#383838" Margin="0" Padding="0">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<!--
									<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
										<Rectangle
											x:Name="OpaqueRect"
											Fill="{Binding Background, ElementName=SubMenuBorder}"
											Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
											Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
									</Canvas>
									<Rectangle Fill="Green" HorizontalAlignment="Left" Margin="0" Width="0"/>
									-->
								<ItemsPresenter
										x:Name="ItemsPresenter"
										KeyboardNavigation.DirectionalNavigation="Cycle"
										Grid.IsSharedSizeScope="True"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										KeyboardNavigation.TabNavigation="Cycle"/>
							</Grid>
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="Icon" Property="Opacity" Value="0.5"/>
				<Setter TargetName="TickPanel" Property="Opacity" Value="0.5"/>
				<Setter TargetName="HeaderPanel" Property="Opacity" Value="0.5"/>
				<Setter TargetName="DropDownArrow" Property="Opacity" Value="0.5"/>
			</Trigger>
			<Trigger Property="IsSuspendingPopupAnimation" Value="True">
				<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
			</Trigger>

			<Trigger Property="IsChecked" Value="True">
				<!--
					<Setter Property="Visibility" TargetName="IconPanel" Value="Collapsed"/>
					<Setter Property="Visibility" TargetName="TickPanel" Value="Visible"/>
					-->
				<!--<Setter Property="Background" TargetName="templateRoot">
						<Setter.Value>
							<SolidColorBrush Color="#d3d3d3" Opacity="0.1" />
						</Setter.Value>
					</Setter>-->
				<Setter TargetName="IconPanel" Property="Background">
					<Setter.Value>
						<SolidColorBrush Color="#d3d3d3" Opacity="0.2" />
					</Setter.Value>
				</Setter>
				<Setter TargetName="TickPanel" Property="Background">
					<Setter.Value>
						<SolidColorBrush Color="#d3d3d3" Opacity="0.2" />
					</Setter.Value>
				</Setter>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsChecked" Value="True" />
					<Condition Property="Icon" Value="{x:Null}"/>
				</MultiTrigger.Conditions>
				<MultiTrigger.Setters>
					<Setter Property="Visibility" TargetName="TickPanel" Value="Visible"/>
				</MultiTrigger.Setters>
			</MultiTrigger>

			<Trigger Property="Icon" Value="{x:Null}">
				<Setter Property="Visibility" TargetName="IconPanel" Value="Collapsed"/>
			</Trigger>

			<Trigger Property="IsHighlighted" Value="True">
				<Setter Property="Background" TargetName="templateRoot">
					<Setter.Value>
						<SolidColorBrush Color="#d3d3d3" Opacity="0.2" />
					</Setter.Value>
				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="ToolbarMenuStyle" TargetType="{x:Type Menu}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Menu}">
					<!--Here is where you change the border thickness to zero on the menu-->
					<Border BorderThickness="0" Margin="0,0,0,0" Padding="0,0,0,0">
						<StackPanel ClipToBounds="False" Orientation="Horizontal" IsItemsHost="True"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="ToolbarDropdownMenuItemStyle" TargetType="{x:Type MenuItem}">
		<Border x:Name="templateRoot"
					BorderThickness="0"
					Background="{TemplateBinding Background}"
					SnapsToDevicePixels="True">
			<Grid Height="16" Margin="2,3,2,3">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter
						x:Name="Icon"
						Content="{TemplateBinding Icon}"
						ContentSource="Icon"
						HorizontalAlignment="Center" VerticalAlignment="Center"
						Height="16" Width="16"
						Margin="0"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
				<Path
						Grid.Column="1"
						VerticalAlignment="Center"
						Margin="2,2,0,0"
						Fill="LightGray" Opacity="0.5"
						Data="M 0 0 L 3 3 L 6 0 Z"/>
				<Popup
						x:Name="PART_Popup"
						AllowsTransparency="True"
						Focusable="False"
						IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
						PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
						Placement="Bottom" PlacementTarget="{Binding ElementName=templateRoot}">
					<Border x:Name="SubMenuBorder" BorderBrush="LightGray" BorderThickness="0.75" Background="{StaticResource TextAreaBackground}" Padding="0">
						<ScrollViewer x:Name="SubMenuScrollViewer" 
								  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}"
								  Background="#383838" Margin="0" Padding="0">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
							</Grid>
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="True">
				<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
			</Trigger>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter Property="Background" TargetName="templateRoot" Value="#5d5d61"/>
			</Trigger>
			<!--
				<Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
					<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
					<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
				</Trigger>
				-->
			<Trigger Property="IsKeyboardFocusWithin" Value="True">
				<Setter TargetName="templateRoot" Property="Background" Value="#1e1e1e" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="DropdownToolbarButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border BorderThickness="0" Background="Transparent">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Background" Value="Transparent"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="Transparent"/>
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>