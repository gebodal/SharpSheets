<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="using:SharpEditor.Windows"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="SharpEditor.Windows.SharpEditorWindow"
		x:DataType="local:SharpEditorWindow"
        Title="SharpEditorWindow"
		Icon="/Assets/Icons/Icon.ico"
		Closing="OnWindowClosing"
		FontFamily="{StaticResource ApplicationFont}" FontSize="{StaticResource AppUIFontSize}">

	<Window.KeyBindings>
		<KeyBinding Gesture="F1" Command="{Binding HelpCommand}"/>
		<KeyBinding Gesture="Ctrl+O" Command="{Binding OpenCommand}"/>
		<KeyBinding Gesture="Ctrl+S" Command="{Binding SaveCommand}"/>
		<KeyBinding Gesture="Ctrl+Shift+S" Command="{Binding SaveAllCommand}"/>
		<KeyBinding Gesture="Ctrl+G" Command="{Binding GenerateCommand}"/>
		<KeyBinding Gesture="Ctrl+Shift+G" Command="{Binding GeneratePopulateCommand}"/>
	</Window.KeyBindings>

	<Window.Styles>
		<!--<StyleInclude Source="avares://Avalonia.Xaml.Interactions.Draggable/Styles.axaml"/>-->
		<StyleInclude Source="/Utilities/DraggableStyles.axaml"/>
	</Window.Styles>

	<DockPanel Background="{StaticResource ThemeControlMidBrush}">

		<Menu DockPanel.Dock="Top" Padding="5"
			Background="{StaticResource ThemeControlMidBrush}" Foreground="{StaticResource ThemeForegroundLowBrush}">
			
			<MenuItem Header="_File">
				<MenuItem Header="New">
					<MenuItem.Icon>
						<ContentControl Classes="newIcon"/>
					</MenuItem.Icon>
					
					<MenuItem Header="Configuration" Click="NewSharpConfigurationClick">
						<MenuItem.Icon>
							<ContentControl Classes="configIcon"/>
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Header="Card Subjects" Click="NewCardSubjectsClick">
						<MenuItem.Icon>
							<ContentControl Classes="cardSubjectIcon"/>
						</MenuItem.Icon>
					</MenuItem>
					<Separator/>
					<MenuItem Header="Card Configuration" Click="NewCardConfigurationClick">
						<MenuItem.Icon>
							<ContentControl Classes="cardDefinitionIcon"/>
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Header="Markup" Click="NewMarkupClick">
						<MenuItem.Icon>
							<ContentControl Classes="markupIcon"/>
						</MenuItem.Icon>
					</MenuItem>
				</MenuItem>
			
				<MenuItem x:Name="TemplatesMenuItem" Header="New From Template">
					<MenuItem.ItemContainerTheme>
						<ControlTheme TargetType="MenuItem" x:DataType="local:TemplateMenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
							<Setter Property="Header" Value="{Binding Name}"/>
							<Setter Property="Command" Value="{Binding ItemCommand}"/>
							<Setter Property="ItemsSource" Value="{Binding MenuItems}"/>
							<Style Selector="^:empty">
								<Setter Property="Icon">
									<Setter.Value>
										<Template>
											<ContentControl Classes="configIcon"/>
										</Template>
									</Setter.Value>
								</Setter>
							</Style>
						</ControlTheme>
					</MenuItem.ItemContainerTheme>
				</MenuItem>
			
				<MenuItem Header="_Open..." Command="{Binding OpenCommand}" InputGesture="Ctrl+O">
					<MenuItem.Icon>
						<ContentControl Classes="openIcon"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Open Template..." Click="OpenTemplateFileClick">
					<MenuItem.Icon>
						<ContentControl Classes="openTemplateIcon"/>
					</MenuItem.Icon>
				</MenuItem>
				<Separator/>
				<MenuItem Header="Save" Command="{Binding SaveCommand}" InputGesture="Ctrl+S">
					<MenuItem.Icon>
						<ContentControl Classes="saveIcon"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Save As..." Command="{Binding SaveAsCommand}"/>
				<MenuItem Header="Save All" Command="{Binding SaveAllCommand}" InputGesture="Ctrl+Shift+S">
					<MenuItem.Icon>
						<ContentControl Classes="saveAllIcon"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Save In Templates..." Click="SaveAsTemplateClick"/>
				<Separator/>
				<MenuItem Header="Import Template Files..." Click="ImportTemplateFilesClick"/>
				<Separator/>
				<MenuItem Header="Close" Command="{Binding CloseCommand}"/>
				<MenuItem Header="Exit" Click="ExitClick"/>
			</MenuItem> <!-- End of File menu -->
		
			<MenuItem Header="_Edit">
				<MenuItem Header="Undo" Command="{Binding UndoCommand}" InputGesture="Ctrl+Z">
					<MenuItem.Icon>
						<ContentControl Classes="undoIcon"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Redo" Command="{Binding RedoCommand}" InputGesture="Ctrl+Y">
					<MenuItem.Icon>
						<ContentControl Classes="redoIcon"/>
					</MenuItem.Icon>
				</MenuItem>
				<Separator/>
				<MenuItem Header="Cut" Command="{Binding CutCommand}" InputGesture="Ctrl+X">
					<MenuItem.Icon>
						<ContentControl Classes="cutIcon"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Copy" Command="{Binding CopyCommand}" InputGesture="Ctrl+C">
					<MenuItem.Icon>
						<ContentControl Classes="copyIcon"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Paste" Command="{Binding PasteCommand}" InputGesture="Ctrl+V">
					<MenuItem.Icon>
						<ContentControl Classes="pasteIcon"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Delete" Command="{Binding DeleteCommand}" InputGesture="Delete">
					<MenuItem.Icon>
						<ContentControl Classes="deleteIcon"/>
					</MenuItem.Icon>
				</MenuItem>
				<Separator/>
				<MenuItem Header="Settings..." Command="{Binding ShowSettingsWindowClick}">
					<MenuItem.Icon>
						<ContentControl Classes="settingsIcon"/>
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem> <!-- End of Edit menu -->
			<MenuItem Header="_View">
				<MenuItem Header="Wrap Lines" Name="WrapLinesButton" Click="ToggleMenuItemCheckBox">
					<MenuItem.Icon>
						<CheckBox IsChecked="{Binding DataManager.WrapLines}" IsHitTestVisible="False">
							<ContentControl Classes="wrapIcon"/>
						</CheckBox>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Show Line Numbers" Name="ShowLineNumbersButton" Click="ToggleMenuItemCheckBox">
					<MenuItem.Icon>
						<CheckBox IsChecked="{Binding DataManager.ShowLineNumbers}" IsHitTestVisible="False">
							<ContentControl Classes="lineNumbersIcon"/>
						</CheckBox>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Show End of Line" Name="ShowEndOfLineButton" Click="ToggleMenuItemCheckBox">
					<MenuItem.Icon>
						<CheckBox IsChecked="{Binding DataManager.ShowEndOfLine}" IsHitTestVisible="False">
							<ContentControl Classes="endOfLineIcon"/>
						</CheckBox>
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem> <!-- End of View menu -->
			<MenuItem Header="_Generate">
				<MenuItem Header="Generate" Command="{Binding GenerateCommand}" InputGesture="Ctrl+G">
					<MenuItem.Icon>
						<ContentControl Classes="runIcon"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Generate and Fill" Command="{Binding GeneratePopulateCommand}" InputGesture="Ctrl+Shift+G">
					<MenuItem.Icon>
						<ContentControl Classes="runPopulateIcon"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Generate and Fill From..." Command="{Binding GeneratePopulateFromCommand}"/>
				<Separator/>
				<MenuItem Header="Open After Generate" Name="GenerateOpenToggle" Click="ToggleMenuItemCheckBox">
					<MenuItem.Icon>
						<CheckBox IsChecked="{Binding DataManager.OpenOnGenerate}" IsHitTestVisible="False"/>
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem> <!-- End of Generate menu -->
			<MenuItem Header="_Designer">
				<MenuItem Header="Show Designer" Name="ShowDesignerButton" Click="ToggleMenuItemCheckBox">
					<MenuItem.Icon>
						<CheckBox IsChecked="{Binding DesignerVisible}" IsHitTestVisible="False"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Swap Designer Panes" Click="SwitchDesignerLayoutClick"/>
				<MenuItem Header="Float Designer" Click="FloatDesignerClick"/>
				<Separator/>
				<MenuItem Header="Show Fields in Designer" Name="ShowFieldsInDesignerButton" Click="ToggleMenuItemCheckBox">
					<MenuItem.Icon>
						<CheckBox IsChecked="{Binding DataManager.DesignerDisplayFields}" IsHitTestVisible="False"/>
					</MenuItem.Icon>
				</MenuItem>
				<Separator/>
				<MenuItem Header="Show Designer by Default" Name="ShowDesignerDefaultButton" Click="ToggleMenuItemCheckBox">
					<MenuItem.Icon>
						<CheckBox IsChecked="{Binding DataManager.DesignerViewerOpenDefault}" IsHitTestVisible="False"/>
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem> <!-- End of Designer menu -->
			<MenuItem>
				<MenuItem.Header>
					<StackPanel Orientation="Horizontal">
						<TextBlock Text="Help" Foreground="{StaticResource ThemeForegroundLowBrush}"/>
						<ContentControl Classes="exclamationIcon"
										Margin="5 0 0 0"
										Foreground="{StaticResource ThemeForegroundLowBrush}"
										IsVisible="{Binding TemplateAlertEnabled}"
										IsEnabled="{Binding TemplateAlertEnabled}"/>
					</StackPanel>
				</MenuItem.Header>
				<MenuItem Header="View Documentation" Command="{Binding HelpCommand}" InputGesture="F1">
					<MenuItem.Icon>
						<ContentControl Classes="infoIcon"/>
					</MenuItem.Icon>
				</MenuItem>
				<Separator/>
				<MenuItem Header="Template Errors" Command="{Binding ShowTemplateErrorsMenuClick}">
					<MenuItem.Icon>
						<ContentControl Classes="exclamationIcon"
										Foreground="{StaticResource ThemeForegroundLowBrush}"
										IsVisible="{Binding TemplateAlertEnabled}"
										IsEnabled="{Binding TemplateAlertEnabled}"/>
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem> <!-- End of Help menu -->
		
		</Menu>
			
		<StackPanel
			DockPanel.Dock="Top"
			Classes="toolbar"
			Orientation="Horizontal"
			Background="{StaticResource ThemeControlMidBrush}"
			Height="25" Margin="2">
			
			<Menu>
				<MenuItem Classes="toolbarDropDownMenu">
					<MenuItem.Icon>
						<ContentControl Classes="newIcon"/>
					</MenuItem.Icon>
					
					<MenuItem Header="Configuration" Click="NewSharpConfigurationClick">
						<MenuItem.Icon>
							<ContentControl Classes="configIcon"/>
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Header="Card Subjects" Click="NewCardSubjectsClick">
						<MenuItem.Icon>
							<ContentControl Classes="cardSubjectIcon"/>
						</MenuItem.Icon>
					</MenuItem>
					<Separator/>
					<MenuItem Header="Card Configuration" Click="NewCardConfigurationClick">
						<MenuItem.Icon>
							<ContentControl Classes="cardDefinitionIcon"/>
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Header="Markup" Click="NewMarkupClick">
						<MenuItem.Icon>
							<ContentControl Classes="markupIcon"/>
						</MenuItem.Icon>
					</MenuItem>
					
				</MenuItem>
			</Menu>
				
			<Button ToolTip.Tip="Open" Command="{Binding OpenCommand}">
				<ContentControl Classes="openIcon"/>
			</Button>
			
			<Button ToolTip.Tip="Save File" Command="{Binding SaveCommand}">
				<ContentControl Classes="saveIcon"/>
			</Button>
			<Button ToolTip.Tip="Save All" Command="{Binding SaveAllCommand}">
				<ContentControl Classes="saveAllIcon"/>
			</Button>
			<Separator Margin="5,0"/>
			<Button ToolTip.Tip="Cut" Command="{Binding CutCommand}">
				<ContentControl Classes="cutIcon"/>
			</Button>
			<Button ToolTip.Tip="Copy" Command="{Binding CopyCommand}">
				<ContentControl Classes="copyIcon"/>
			</Button>
			<Button ToolTip.Tip="Paste" Command="{Binding PasteCommand}">
				<ContentControl Classes="pasteIcon"/>
			</Button>
			<Button ToolTip.Tip="Delete" Command="{Binding DeleteCommand}">
				<ContentControl Classes="deleteIcon"/>
			</Button>
			<Separator Margin="5,0"/>
			<Button ToolTip.Tip="Undo" Command="{Binding UndoCommand}">
				<ContentControl Classes="undoIcon"/>
			</Button>
			<Button ToolTip.Tip="Redo" Command="{Binding RedoCommand}">
				<ContentControl Classes="redoIcon"/>
			</Button>
			<Separator Margin="5,0"/>
			<Button ToolTip.Tip="Comment Selected Lines" Command="{Binding IncrementCommentCommand}">
				<ContentControl Classes="commentAddIcon"/>
			</Button>
			<Button ToolTip.Tip="Uncomment Selected Lines" Command="{Binding DecrementCommentCommand}">
				<ContentControl Classes="commentSubIcon"/>
			</Button>
			<Separator Margin="5,0"/>
			<Button ToolTip.Tip="Generate PDF" Command="{Binding GenerateCommand}">
				<StackPanel Orientation="Horizontal">
					<ContentControl Classes="runIcon" Margin="0,0,6,0"/>
					<TextBlock Foreground="{StaticResource ThemeForegroundLowBrush}">Generate</TextBlock>
				</StackPanel>
			</Button>
			<Separator Margin="5,0"/>
			<Button ToolTip.Tip="Generate PDF and Populate Fields" Command="{Binding GeneratePopulateCommand}">
				<ContentControl Classes="runPopulateIcon"/>
			</Button>
			<Separator Margin="5,0"/>
			<ToggleButton Name="ToolbarShowDesignerButton" ToolTip.Tip="Toggle Show Designer"
				IsChecked="{Binding DesignerVisible}">
				<ContentControl Classes="designerIcon"/>
			</ToggleButton>
		
		</StackPanel>
			
		<Grid Name="MainGrid" Background="{StaticResource ThemeControlMidBrush}" Margin="0,5,0,0">

			<Border Name="MainGridBorder" IsEnabled="False" IsVisible="False" BorderThickness="3" BorderBrush="{StaticResource ThemeBorderHighBrush}" IsHitTestVisible="False"/>

			<TabControl Name="EditorTabControl" Classes="draggable fileTabs" Padding="0" Margin="0" BorderThickness="0">
				<TabControl.Styles>
					<Style Selector="TabControl WrapPanel">
						<Setter Property="Margin" Value="0,0,0,0"/>
					</Style>
					<Style Selector="TabItem">
						<Setter Property="Padding" Value="0,0,0,0"/>
						<Setter Property="Margin" Value="0,0,0,0"/>
					</Style>
				</TabControl.Styles>
				<TabControl.ItemTemplate>
					<DataTemplate>
						<UserControl
							Content="{Binding Header, DataType={x:Type local:EditorTabItem}}"
							Margin="0" Padding="0" BorderThickness="0"
							FontSize="{Binding FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
							<UserControl.Styles>
								<Style Selector="TextBlock">
									<Setter Property="Foreground" Value="{StaticResource HighlightForegroundBrush}"/>
								</Style>
							</UserControl.Styles>
						</UserControl>
					</DataTemplate>
				</TabControl.ItemTemplate>
				<TabControl.ContentTemplate>
					<DataTemplate>
						<UserControl
							Content="{Binding Content, DataType={x:Type local:EditorTabItem}}"
							HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
							HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
					</DataTemplate>
				</TabControl.ContentTemplate>
			</TabControl>
			
		</Grid>
		
	</DockPanel>
	
</Window>
