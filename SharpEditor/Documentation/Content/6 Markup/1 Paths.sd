# Paths

Paths are a very powerful way of drawing arbitrary graphics using a series of lines and curves. In Markup patterns, they use the same format as SVG Paths, based on the `<path>` [element](Markup::path) and its `d` attribute.

All of the path geometry is defined by the `d` attribute. Within that attribute are a series of drawing commands, which take the form of a letter optionally followed by a series of one or more numbers.

Each command has two forms, indicated by whether the letter is upper- or lower-case. Uppercase letters indicate absolute coordinates, whereas lowercase letters indicate coordinates relative to the last drawing coordinate.

As such, there is a concept of a "pen location": the last point that was specified in the series of drawing operations. This point may have been specified relative to some previous point, or given as absolute coordinates. Some operations require there to be a defined pen location, and so it is advisable to begin all path data attributes with a "Move To" command (see below) with absolute positioning.

Below you will find a description of all of the available drawing commands and their arguments.

## Move To

The Move To command simply moves the pen location to the specified coordinates, without drawing any connecting lines or curves.

``` Unknown
M x y
(or)
m dx dy
```

## Line Commands

The Line To command draws a straight line from the pen location to the specified coordinates.

``` Unknown
L x y
(or)
l dx dy
```

There are two shorthands for drawing horizontal (`H`) and vertical (`V`) lines, which simply reuse the other coordinate from the current pen location.

``` Unknown
H x
(or)
h dx
```

``` Unknown
V y
(or)
v dy
```

## Close Path

The Close Path command draws a straight line from the pen location to the start of the current path. There is no difference between the absolute and relative commands.

``` Unknown
Z
(or)
z
```

## Curves

You may draw quadratic or cubic Bézier curves in paths, which can be used to create very complex shapes.

A quadratic Bézier curve is drawn with the following command, where the first coordinate pair is the control point, and the second is the point where the curve should end.

``` Unknown
Q x1 y1, x y
(or)
q dx1 dy1, dx dy
```

You can also specify only an end point for the curve using `T`, in which case the control point will be inferred. If the `T` command follows a `Q` or `T` command, then its control point will be the reflection of the previous control point around the current pen location. If it does not follow a `Q` or `T` command, then the current pen location is used as the first control point (resulting in a straight line).

``` Unknown
T x y
(or)
t dx dy
```

A cubic Bézier curve is drawn with the following, where the first two coordinate pairs are the first and second control points, respectively, and the final pair is point where the curve should end.

``` Unknown
C x1 y1, x2 y2, x y
(or)
c dx1 dy1, dx2 dy2, dx dy
```

You can also omit the first control point for the curve using `S`, in which case the first control point will be inferred. If the `S` command follows a `C` or `S` command, then its first control point will be the reflection of the previous curve's second control point around the current pen location. If it does not follow a `C` or `S` command, then the current pen location is used as the first control point.

``` Unknown
S x2 y2, x y
(or)
s dx2 dy2, dx dy
```

## Arcs

You may also draw elliptical arcs using the following command.

``` Unknown
A rx ry x-axis-rotation large-arc-flag sweep-flag x y
(or)
a rx ry x-axis-rotation large-arc-flag sweep-flag dx dy
```

For a given x and y radius and rotation, there are two possible ellipses which can connect a start and end point (as long as those points are sufficiently close together). On each of these ellipses, there are two possible paths which may be taken from the start point to the end point. Hence, there are four possible arcs which can be used. The `large-arc-flag` and `sweep-flag` are used to indicate which of these arcs is desired. Each flag must have a value of either `0` or `1`, giving four possible states. A `large-arc-flag` of `1` indicates that the arc that contains more than 180 degrees should be used. The `sweep-flag` indicates if the arc should begin travelling with negative or positive angles. In practice, some experimentation is often required to get the right combination!