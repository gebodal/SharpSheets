# Using the Editor

This page contains some helpful information about the editor itself, detailing design elements and useful features.


## File Types

SharpSheets involves four different file types: configuration files, markup files, card config files, and card subject files. The extensions for these files are, respectively: `.ssc`, `.sbml`, `.scd`, and `.scs`. SharpSheets interprets the content of files based solely on the file extension.

When a new file is created, one of these file types must be chosen. Likewise, when saving, these file types will be available as options for the saved file. The type of a document open in the editor will affect the highlighting of syntax, and the way in which the editor and designer interpret the file contents for analysis and display.

If you are having issues with the way a file is being displayed in the editor, check that it is saved with the correct file extension.

Note that it is possible to edit other types of files in the editor, such as simple text files (`.txt`), which may be desireable under certain circumstances.


## Generating Documents

One of the most important uses of the editor is actually generating the documents we've described with our configuration files! This can be done using the `Generate` button on the toolbar, or in the `Generate` menu.

You will note that there are two options: "Generate" and "Generate and Fill". The first option simply generates a PDF file, with any form fields left empty or with default values. The second option uses an existing PDF document to populate the form fields of the newly generated one. This "fill", or "populate", only works if the form fields in the source document have names which match those in the new document. Not all names must match, or be present in the source. If the new document has fields which do not occur in the source, then those new fields will be left blank. If the source document has fields which do not occur in the new document, then those old fields will be ignored.

If a source document has already been specified for a given configuration in this editor session, then that source will continue to be used when the `Generate and Fill` button is pressed. If you want to use a new source document, then the `Generate and Fill From` button in the `Generate` menu will allow you to select a new source document before generating. The `Generate` button will only ever create documents with empty or default field values.

The `Open After Generate` toggle will cause the generated PDF file to be opened in your system PDF viewer when enabled. Otherwise, the document will simply be saved in the background.

Not all files can be used to generate PDF documents: markup and card config files will have the `Generate` buttons disabled when open in the editor. If you return to a tab with a configuration or card subject file open, the `Generate` button will be automatically re-enabled.


## Designer

The editor has a designer that allows you to view the current state of the document contents. For configuration and card subject files, this corresponds to the PDF document that will be generated from the file contents. For markup and card config files, the designer will show an example document of the markup patterns or example cards, as appropriate.

The designer can be toggled, and the document will not be drawn if the designer is hidden (saving computation and potentially speeding up the editor). This toggle can be found on the menu bar, or in the `Designer` drop-down menu. It is important to note that certain errors can only be detected when a document is drawn (particularly layout errors), and so it is recommended to render the document in the editor before generating, as this will give more specific error messages.

There is also a toggle for setting the designer to be open by default, which can be found in the `Designer` menu or the `Settings` window (accessed via `Edit > Settings`).

Form fields are drawn as transparent-coloured areas in the designer, to indicate their location and size on the page. Hovering over one of these areas will also display the name of that field. This feature can be disabled in the `Designer` menu or `Settings` window.


## Errors

When there is an error in the document, this should be displayed as underlined text in the document itself. Hovering over the text will display a tooltip with further details about the error. The editor also has a highlighted section which details the number of errors in the currently open document. Clicking on this highlighted area will move the cursor to the next error in the currently open document.

Please note that SharpSheets is still a work in progress, and occassionally you may encounter documents which do not parse or draw correctly, without indicating the error in a helpful manner. Please let us know if you encounter such problems, and we'll see what we can do about them!


## Templates

An important feature of SharpSheets is the ability to add to its widget, shape, and card styles with your own designs. This allows you to customise the appearance and behaviour of the generated documents, and create genre and game specific styles for the PDFs.

All of these designs and styles will be specified in a set of files. Most of these files are editable from the editor, as they are simple markup or card config files (and occasionally configuration and card subject files), but they can also be images and font files. Regardless of their file type, they are stored in the "Template Directory". The location of this directory can be specified in the "Settings" window.

You can open files from the template directory in the `File` menu, under `Open Template`. You can also save the currently open file to the template directory using `Save In Templates`. Any markup or card config file stored here will be parsed and stored in the list of available widgets, styles, and card configs. Additionally, any configuration file stored in the template directory will be made available as a "new file template", accessible via `File > New From Template`.

The files will be re-parsed if they are written to (i.e. you save new content to the file), such that the editor keeps an up-to-date list of the available styles. If there ever appears to be an error where the available styles do not match the files in the template directory, try restarting the editor so that the files are reloaded from scratch, which should resolve the issue.


### New File Templates

Configuration files stored in the template directory will be made available as template configurations for new configuration documents, accessible via `File > New From Template`.

The name of the template will, by default, be the relative path of the file within the template directory (without the file extension). File separators will be replaced with dots ("`.`").

```
/path/to/template_directory/gamesystem/charactersheet.ssc
# becomes
gamesystem.charactersheet
```

If you wish to specify the name manually, you can do so by making the first line of the template configuration a special comment, like so:

```
#= gamesystem.charactersheet
```

This will set the name of the document to the content of the comment, regardless of its location in the template directory. The comment line must be the first line of the document, must begin with `#=`, and must contain only the name of the template. This line, and any subsequent empty lines, will be removed when the user creates a new document from this template.


### Importing Templates

Templates can easily be imported into the template directory using `File > Import Template Files`. Here you can import either individual files, which will be copied into the template directory, or `.zip` files, which will be unpacked and saved into the template directory.

As such, you can very simply package any template files you may create for use by others, by simply zipping the directory in the template folder that contains your template files, and distributing that single archive file.

### Template Errors

When a file in the templates directory produces errors during parsing, these errors will appear in the window under `Help > Template Errors`. This will open the Template Errors window, from which you can open the corresponding file directly. When errors have been found in the parsed files, a marker will appear in the menu bar.


## Themes

You can change the editor theme and syntax highlighting colors of SharpSheets from the Settings window (`Edit > Settings`). Changes will not take effect until "Apply" pressed. "Default" will return the theme to application defaults, whereas "Reset" will reset to the currently saved theme (and remove any changes since the Settings window was opened).