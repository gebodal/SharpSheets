<!-- 
	Copyright (c) 2009 Daniel Grunwald
	
	Permission is hereby granted, free of charge, to any person obtaining a copy of this
	software and associated documentation files (the "Software"), to deal in the Software
	without restriction, including without limitation the rights to use, copy, modify, merge,
	publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons
	to whom the Software is furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in all copies or
	substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
	INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
	PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
	FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
	DEALINGS IN THE SOFTWARE.
-->
<Window x:Class="SharpEditor.SharpEditorWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:SharpEditor"
	xmlns:managers="clr-namespace:SharpEditor.DataManagers"
	Title="SharpSheetsEditor" Height="600" Width="850"
	Icon="Images/Icon.ico"
	Closing="OnWindowClosing"
	AllowDrop="True"
	Drop="WindowDrop"
	x:Name="thisWindow">
	<!-- PreviewKeyDown="WindowPreviewKeyDown" -->

	<Window.CommandBindings>
		<CommandBinding Command="ApplicationCommands.Open"
				  Executed="OpenExecuted"
				  CanExecute="OpenCanExecute"/>
		<CommandBinding Command="ApplicationCommands.Close"
				  Executed="CloseExecuted"
				  CanExecute="CloseCanExecute"/>
		<CommandBinding Command="ApplicationCommands.Save"
				  Executed="SaveExecuted"
				  CanExecute="SaveCanExecute"/>
		<CommandBinding Command="ApplicationCommands.SaveAs"
				  Executed="SaveAsExecuted"
				  CanExecute="SaveAsCanExecute"/>
		<CommandBinding Command="{x:Static local:SharpEditorWindow.SaveAllCommand}"
					Executed="SaveAllCommandExecuted"
					CanExecute="SaveAllCommandCanExecute"/>
		<CommandBinding Command="ApplicationCommands.Help"
				  Executed="HelpExecuted"
				  CanExecute="HelpCanExecute"/>
		<CommandBinding Command="{x:Static local:SharpEditorWindow.GenerateCommand}"
					Executed="GenerateCommandExecuted"
					CanExecute="GenerateCommandCanExecute"/>
		<CommandBinding Command="{x:Static local:SharpEditorWindow.GeneratePopulateCommand}"
					Executed="GeneratePopulateCommandExecuted"
					CanExecute="GeneratePopulateCommandCanExecute"/>
		<CommandBinding Command="{x:Static local:SharpEditorWindow.GeneratePopulateFromCommand}"
					Executed="GeneratePopulateFromCommandExecuted"
					CanExecute="GeneratePopulateFromCommandCanExecute"/>
		<CommandBinding Command="{x:Static local:SharpEditorWindow.AddCommentCommand}"
					Executed="AddCommentCommandExecuted"
					CanExecute="AddCommentCommandCanExecute"/>
		<CommandBinding Command="{x:Static local:SharpEditorWindow.RemoveCommentCommand}"
					Executed="RemoveCommentCommandExecuted"
					CanExecute="RemoveCommentCommandCanExecute"/>
	</Window.CommandBindings>

	<DockPanel Background="#2d2d30">
		<Menu DockPanel.Dock="Top" Padding="2,5,2,2" Background="#2d2d30" Foreground="LightGray">
			<MenuItem Header="_File" Padding="8,0" Template="{DynamicResource SharpMenuBarItem}">
				<!--
				<MenuItem Header="_New" Click="NewFileClick" Template="{DynamicResource MenuItemControlTemplate2}">
					<MenuItem.Icon>
						<Image Source="Images/New2.png" ></Image>
					</MenuItem.Icon>
				</MenuItem>
				-->
				<MenuItem Header="New" Template="{DynamicResource SharpMenuDropdownItem}">
					<MenuItem Header="Configuration" Click="NewSharpConfigurationClick" Template="{DynamicResource SharpMenuDropdownItem}">
						<MenuItem.Icon>
							<Image Source="Images/NewCharacterSheet2.png"/>
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Header="Card Subjects" Click="NewCardSubjectsClick" Template="{DynamicResource SharpMenuDropdownItem}">
						<MenuItem.Icon>
							<Image Source="Images/NewCardSubject2.png"/>
						</MenuItem.Icon>
					</MenuItem>
					<Separator/>
					<MenuItem Header="Card Configuration" Click="NewCardConfigurationClick" Template="{DynamicResource SharpMenuDropdownItem}">
						<MenuItem.Icon>
							<Image Source="Images/NewCardDefinition2.png"/>
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Header="Markup" Click="NewMarkupClick" Template="{DynamicResource SharpMenuDropdownItem}">
						<MenuItem.Icon>
							<Image Source="Images/NewMarkup3.png"/>
						</MenuItem.Icon>
					</MenuItem>
					<!--
					<MenuItem Header="Blank" Click="NewBlankDocumentClick" Template="{DynamicResource MenuItemControlTemplate2}">
						<MenuItem.Icon>
							<Image Source="Images/New2.png"/>
						</MenuItem.Icon>
					</MenuItem>
					-->
				</MenuItem>
				<MenuItem x:Name="TemplatesMenuItem" Header="New From Template" IsEnabled="{Binding HasItems, RelativeSource={RelativeSource Self}}" Template="{DynamicResource SharpMenuDropdownItem}">
					<MenuItem.ItemContainerStyle>
						<Style TargetType="{x:Type MenuItem}">
							<!--<Setter Property="MenuItem.Header" Value="testing 2"/>-->
							<Setter Property="MenuItem.Template" Value="{DynamicResource SharpMenuDropdownItem}"/>
							<EventSetter Event="MenuItem.Click" Handler="TemplateMenuItemClick"/>
						</Style>
					</MenuItem.ItemContainerStyle>
					<MenuItem.ItemTemplate>
						<HierarchicalDataTemplate DataType="{x:Type local:TemplateMenuItem}" ItemsSource="{Binding Path=MenuItems}">
							<TextBlock Text="{Binding Name}"/>
						</HierarchicalDataTemplate>
					</MenuItem.ItemTemplate>
				</MenuItem>
				<MenuItem Header="_Open..." Command="Open" Template="{DynamicResource SharpMenuDropdownItem}">
					<MenuItem.Icon>
						<Image Source="Images/Open3.png"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Open Template..." Click="OpenTemplateFileClick" Template="{DynamicResource SharpMenuDropdownItem}"/>
				<Separator/>
				<MenuItem Command="Save" Template="{DynamicResource SharpMenuDropdownItem}">
					<MenuItem.Icon>
						<Image Source="Images/Save2.png"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Save As..." Command="SaveAs" Template="{DynamicResource SharpMenuDropdownItem}" IsEnabled="{Binding ElementName=thisWindow, Path=SavePossible}"/>
				<!--
				<MenuItem Header="Save All" Click="SaveAllFileClick" InputGestureText="Ctrl+Shift+S" Template="{DynamicResource MenuItemControlTemplate2}">
					<MenuItem.Icon>
						<Image Source="Images/SaveAll.png"/>
					</MenuItem.Icon>
				</MenuItem>
				-->
				<MenuItem Command="{x:Static local:SharpEditorWindow.SaveAllCommand}" Template="{DynamicResource SharpMenuDropdownItem}">
					<MenuItem.Icon>
						<Image Source="Images/SaveAll.png"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Save In Templates..." Click="SaveAsTemplateClick" Template="{DynamicResource SharpMenuDropdownItem}" IsEnabled="{Binding ElementName=thisWindow, Path=SavePossible}"/>
				<Separator/>
				<MenuItem Header="Import Template Files..." Click="ImportTemplateFilesClick" Template="{DynamicResource SharpMenuDropdownItem}"/>
				<Separator/>
				<MenuItem Command="Close" Template="{DynamicResource SharpMenuDropdownItem}"/>
				<MenuItem Header="Exit" Click="ExitClick" Template="{DynamicResource SharpMenuDropdownItem}"/>
			</MenuItem>
			<MenuItem Header="_Edit" Padding="8,0" Template="{DynamicResource SharpMenuBarItem}">
				<MenuItem Command="Undo" Template="{DynamicResource SharpMenuDropdownItem}">
					<MenuItem.Icon>
						<Image Source="Images/Undo2.png"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Command="Redo" Template="{DynamicResource SharpMenuDropdownItem}">
					<MenuItem.Icon>
						<Image Source="Images/Redo2.png"/>
					</MenuItem.Icon>
				</MenuItem>
				<Separator/>
				<MenuItem Command="Cut" Template="{DynamicResource SharpMenuDropdownItem}">
					<MenuItem.Icon>
						<Image Source="Images/Cut3.png"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Command="Copy" Template="{DynamicResource SharpMenuDropdownItem}">
					<MenuItem.Icon>
						<Image Source="Images/Copy2.png"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Command="Paste" Template="{DynamicResource SharpMenuDropdownItem}">
					<MenuItem.Icon>
						<Image Source="Images/Paste2.png"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Command="Delete" Template="{DynamicResource SharpMenuDropdownItem}">
					<MenuItem.Icon>
						<Image Source="Images/Delete4.png"/>
					</MenuItem.Icon>
				</MenuItem>
				<Separator/>
				<MenuItem Header="Settings..." Click="ShowSettingsWindowClick" Template="{DynamicResource SharpMenuDropdownItem}">
					<MenuItem.Icon>
						<Path Fill="LightGray" Data="M 6.366,0.183 C 7.443,-0.043 8.555,-0.044 9.632,0.181 9.778,1.141 10.099,2.630 10.850,3.062 11.599,3.496 13.050,3.029 13.954,2.675 c 0.733,0.821 1.289,1.785 1.631,2.830 -0.758,0.606 -1.886,1.628 -1.885,2.494 0,0.901 1.155,1.909 1.887,2.494 -0.345,1.045 -0.901,2.008 -1.634,2.829 -0.904,-0.354 -2.353,-0.821 -3.103,-0.387 -0.750,0.432 -1.071,1.920 -1.216,2.879 -1.077,0.226 -2.189,0.227 -3.266,0.003 C 6.222,14.857 5.901,13.368 5.150,12.935 4.400,12.501 2.949,12.968 2.046,13.323 1.312,12.502 0.757,11.538 0.415,10.491 1.172,9.886 2.300,8.864 2.300,7.999 2.300,7.132 1.172,6.110 0.413,5.504 0.758,4.459 1.314,3.496 2.047,2.675 2.950,3.030 4.400,3.496 5.150,3.062 5.899,2.630 6.220,1.142 6.366,0.184 Z M 8.000,10.395 c 3.195,0.002 3.195,-4.789 0,-4.791 -3.192,0.002 -3.192,4.792 0,4.791 z"/>
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem>
			<MenuItem Header="_View" Padding="10,2" Template="{DynamicResource SharpMenuBarItem}">
				<MenuItem Header="Wrap Lines" Name="WrapLinesButton" IsCheckable="True" IsChecked="{Binding Source={x:Static managers:SharpDataManager.Instance}, Path=WrapLines}" Template="{DynamicResource SharpMenuDropdownItem}">
					<MenuItem.Icon>
						<Image Source="Images/WordWrap2.png"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Show Line Numbers" Name="ShowLineNumbersButton" IsCheckable="True" IsChecked="{Binding Source={x:Static managers:SharpDataManager.Instance}, Path=ShowLineNumbers}" Template="{DynamicResource SharpMenuDropdownItem}">
					<MenuItem.Icon>
						<TextBlock Width="16" TextAlignment="Center" Foreground="LightGray">#</TextBlock>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Show End of Line" Name="ShowEndOfLineButton" IsCheckable="True" IsChecked="{Binding Source={x:Static managers:SharpDataManager.Instance}, Path=ShowEndOfLine}" Template="{DynamicResource SharpMenuDropdownItem}">
					<MenuItem.Icon>
						<TextBlock Width="16" TextAlignment="Center" Foreground="LightGray">¶</TextBlock>
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem>
			<MenuItem Header="_Generate" Padding="10,2" Template="{DynamicResource SharpMenuBarItem}">
				<MenuItem Command="{x:Static local:SharpEditorWindow.GenerateCommand}" Template="{DynamicResource SharpMenuDropdownItem}">
					<MenuItem.Icon>
						<Image Source="Images/Run3.png"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Generate and Fill" Command="{x:Static local:SharpEditorWindow.GeneratePopulateCommand}" Template="{DynamicResource SharpMenuDropdownItem}">
					<MenuItem.Icon>
						<Image Source="Images/GeneratePopulate.png"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Generate and Fill From..." Command="{x:Static local:SharpEditorWindow.GeneratePopulateFromCommand}" Template="{DynamicResource SharpMenuDropdownItem}"/>
				<Separator/>
				<MenuItem Name="GenerateOpenToggle" Header="Open After Generate" IsCheckable="True" IsChecked="{Binding Source={x:Static managers:SharpDataManager.Instance}, Path=OpenOnGenerate}" Template="{DynamicResource SharpMenuDropdownItem}"/>
			</MenuItem>
			<MenuItem Header="_Designer" Padding="10,2" Template="{DynamicResource SharpMenuBarItem}">
				<MenuItem Header="Show Designer" Name="ShowDesignerButton" IsCheckable="True" IsChecked="False" Click="ShowDesignerButtonClick" Template="{DynamicResource SharpMenuDropdownItem}"/>
				<MenuItem Header="Swap Designer Panes" Click="SwitchDesignerLayoutClick" Template="{DynamicResource SharpMenuDropdownItem}"/>
				<MenuItem Header="Float Designer" Click="FloatDesignerClick" Template="{DynamicResource SharpMenuDropdownItem}"/>
				<Separator/>
				<MenuItem Header="Show Fields in Designer" Name="ShowFieldsInDesignerButton" IsCheckable="True" IsChecked="{Binding Source={x:Static managers:SharpDataManager.Instance}, Path=DesignerDisplayFields}" Template="{DynamicResource SharpMenuDropdownItem}"/>
				<Separator/>
				<MenuItem Header="Show Designer by Default" Name="ShowDesignerDefaultButton" IsCheckable="True" IsChecked="{Binding Source={x:Static managers:SharpDataManager.Instance}, Path=DesignerViewerOpenDefault}" Template="{DynamicResource SharpMenuDropdownItem}"/>
			</MenuItem>
			<MenuItem Padding="10,2" Template="{DynamicResource SharpMenuBarItem}">
				<MenuItem.Header>
					<StackPanel Orientation="Horizontal">
						<TextBlock Text="Help" Foreground="LightGray"/>
						<Image
							x:Name="TemplateErrorHeaderIcon"
							Visibility="Collapsed"
							VerticalAlignment="Bottom"
							Width="15" Height="15"
							Margin="5 0 00 0"
							Source="Images/ExclamationWhite.png"/>
					</StackPanel>
				</MenuItem.Header>
				<MenuItem Header="View Documentation" Command="ApplicationCommands.Help" Template="{DynamicResource SharpMenuDropdownItem}">
					<MenuItem.Icon>
						<Image Source="Images/Info.png"/>
					</MenuItem.Icon>
				</MenuItem>
				<Separator/>
				<MenuItem Header="Template Errors" Click="ShowTemplateErrorsMenuClick" Template="{DynamicResource SharpMenuDropdownItem}">
					<MenuItem.Icon>
						<Image
							x:Name="TemplateErrorMenuIcon"
							Visibility="Collapsed"
							Source="Images/ExclamationWhite.png"/>
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem>
		</Menu>
		<ToolBar DockPanel.Dock="Top" Padding="2" ToolBarTray.IsLocked="True" Background="#2d2d30" BorderBrush="#2d2d30">
			<ToolBar.Resources>
				<!--
				<Style TargetType="{x:Type Image}">
					<Style.Triggers>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}, AncestorLevel=1}, Path=IsEnabled}" Value="False">
							<Setter Property="Opacity" Value="0.30" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
				-->
				<Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}"
					BasedOn="{StaticResource SubtleButton}"/>
			</ToolBar.Resources>

			<Menu Style="{DynamicResource ToolbarMenuStyle}" BorderThickness="0" Background="Transparent" VerticalAlignment="Center" Margin="0,0,0,0">
				<MenuItem Template="{DynamicResource ToolbarDropdownMenuItemStyle}">
					<MenuItem.Icon>
						<Image Source="Images/New2.png"/>
					</MenuItem.Icon>
					
					<MenuItem Header="Configuration" Click="NewSharpConfigurationClick" Template="{DynamicResource SharpMenuDropdownItem}">
						<MenuItem.Icon>
							<Image Source="Images/NewCharacterSheet2.png"/>
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Header="Card Subjects" Click="NewCardSubjectsClick" Template="{DynamicResource SharpMenuDropdownItem}">
						<MenuItem.Icon>
							<Image Source="Images/NewCardSubject2.png"/>
						</MenuItem.Icon>
					</MenuItem>
					<Separator/>
					<MenuItem Header="Card Configuration" Click="NewCardConfigurationClick" Template="{DynamicResource SharpMenuDropdownItem}">
						<MenuItem.Icon>
							<Image Source="Images/NewCardDefinition2.png"/>
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Header="Markup" Click="NewMarkupClick" Template="{DynamicResource SharpMenuDropdownItem}">
						<MenuItem.Icon>
							<Image Source="Images/NewMarkup3.png"/>
						</MenuItem.Icon>
					</MenuItem>
					
				</MenuItem>
			</Menu>

			<!--
			<Button Click="NewFileClick" ToolTip="New File">
				<Image Source="Images/New2.png" Height="16"/>
			</Button>
			-->
			
			<Button Command="Open" ToolTip="Open File" ToolTipService.ShowOnDisabled="True">
				<Image Source="Images/Open3.png" Height="16"/>
			</Button>

			<!--
			<Menu Style="{DynamicResource ToolbarMenuStyle}" BorderThickness="0" Background="Transparent" VerticalAlignment="Center" Margin="0,0,0,0">
				<MenuItem Margin="0,0,0,0" Padding="2">
					<MenuItem.Header>
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Image Source="Images/New2.png" Height="16" VerticalAlignment="Center"/>
							<Path Grid.Column="1" VerticalAlignment="Center" Margin="2,2,0,0" Fill="Black" Data="M 0 0 L 3 3 L 6 0 Z"/>
						</Grid>
					</MenuItem.Header>
					<MenuItem.Style>
						<Style TargetType="MenuItem">
							<Style.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Background" Value="Red"/>
								</Trigger>
							</Style.Triggers>
						</Style>
					</MenuItem.Style>
					<MenuItem Header="Menu 1-1" >
						<MenuItem Header="Menu 1-1-1"/>
						<MenuItem Header="Menu 1-1-2"/>
					</MenuItem>
					<MenuItem Header="Menu 1-2"/>
				</MenuItem>
			</Menu>
			-->

			<!--
			<Menu Style="{DynamicResource ToolbarMenuStyle}" BorderThickness="0" Background="Transparent" VerticalAlignment="Center" Margin="0,0,0,0">
				<MenuItem Margin="0,0,0,0" Padding="0,0,0,0">
					<MenuItem.Header>
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Button Background="Transparent" Click="NewFileClick" Style="{StaticResource DropdownToolbarButtonStyle}">
								<Image Source="Images/New2.png" Height="16"/>
							</Button>
							<Path Grid.Column="1" VerticalAlignment="Center" Margin="2,2,0,0" Fill="Black" Data="M 0 0 L 3 3 L 6 0 Z"/>
						</Grid>
					</MenuItem.Header>
					<MenuItem Header="Menu 1-1" >
						<MenuItem Header="Menu 1-1-1"/>
						<MenuItem Header="Menu 1-1-2"/>
					</MenuItem>
					<MenuItem Header="Menu 1-2"/>
				</MenuItem>
			</Menu>
			-->

			<Button Command="Save" ToolTip="Save File" ToolTipService.ShowOnDisabled="True">
				<Image Source="Images/Save2.png" Height="16"/>
			</Button>
			<Button Command="{x:Static local:SharpEditorWindow.SaveAllCommand}" ToolTip="Save All" ToolTipService.ShowOnDisabled="True">
				<Image Source="Images/SaveAll.png" Height="16"/>
			</Button>
			<Separator Margin="5,0" Background="#55555a"/>
			<Button Command="Cut" ToolTip="Cut" ToolTipService.ShowOnDisabled="True">
				<Image Source="Images/Cut3.png" Height="16"/>
			</Button>
			<Button Command="Copy" ToolTip="Copy" ToolTipService.ShowOnDisabled="True">
				<Image Source="Images/Copy2.png" Height="16"/>
			</Button>
			<Button Command="Paste" ToolTip="Paste" ToolTipService.ShowOnDisabled="True">
				<Image Source="Images/Paste2.png" Height="16"/>
			</Button>
			<Button Command="Delete" ToolTip="Delete" ToolTipService.ShowOnDisabled="True">
				<Image Source="Images/Delete4.png" Height="16"/>
			</Button>
			<Separator Margin="5,0" Background="#55555a"/>
			<Button Command="Undo" ToolTip="Undo" ToolTipService.ShowOnDisabled="True">
				<Image Source="Images/Undo2.png" Height="16"/>
			</Button>
			<Button Command="Redo" ToolTip="Redo" ToolTipService.ShowOnDisabled="True">
				<Image Source="Images/Redo2.png" Height="16"/>
			</Button>
			<Separator Margin="5,0" Background="#55555a"/>
			<Button Command="{x:Static local:SharpEditorWindow.AddCommentCommand}" ToolTip="Comment Selected Lines" ToolTipService.ShowOnDisabled="True">
				<Image Source="Images/CommentAdd.png" Height="16"/>
			</Button>
			<Button Command="{x:Static local:SharpEditorWindow.RemoveCommentCommand}" ToolTip="Uncomment Selected Lines" ToolTipService.ShowOnDisabled="True">
				<Image Source="Images/CommentRemove.png" Height="16"/>
			</Button>
			<Separator Margin="5,0" Background="#55555a"/>
			<Button Command="{x:Static local:SharpEditorWindow.GenerateCommand}" ToolTip="Generate PDF" ToolTipService.ShowOnDisabled="True">
				<StackPanel Orientation="Horizontal">
					<Image Source="Images/Run3.png" Height="16" Margin="0,0,3,0"/>
					<TextBlock Foreground="LightGray">Generate</TextBlock>
				</StackPanel>
			</Button>
			<Separator Margin="5,0" Background="#55555a"/>
			<Button Command="{x:Static local:SharpEditorWindow.GeneratePopulateCommand}" ToolTip="Generate PDF and Populate Fields" ToolTipService.ShowOnDisabled="True">
				<Image Source="Images/GeneratePopulate.png" Height="16"/>
			</Button>
			<Separator Margin="5,0" Background="#55555a"/>
			<ToggleButton Name="ToolbarShowDesignerButton" Click="ToolbarShowDesignerButtonClick" ToolTip="Toggle Show Designer"
				Style="{StaticResource SubtleToggleButton}">
				<Image Source="Images/Designer4.png" Height="16" Margin="4,2"/>
			</ToggleButton>
		</ToolBar>
		<!--
		<StatusBar DockPanel.Dock="Bottom">
			<StatusBarItem>
				<TextBlock Name="CursorPositionText"/>
			</StatusBarItem>
			<StatusBarItem Name="ErrorStatus" Background="Red" Visibility="Collapsed">
				<StackPanel Orientation="Horizontal">
					<Image Source="Images/Delete.png" Height="16" Margin="0,0,3,0"/>
					<TextBlock Name="ErrorCount">Generate</TextBlock>
				</StackPanel>
			</StatusBarItem>
		</StatusBar>
		-->
		<Grid Name="MainGrid" Background="#2d2d30">
			<TabControl x:Name="EditorTabControl" BorderThickness="0" Margin="0" Padding="0" Background="#2d2d30" Foreground="LightGray">
				<TabControl.Resources>
					<Style TargetType="TabPanel">
						<EventSetter Event="Drop" Handler="EditorTabPanel_Drop"/>
					</Style>
					<Style TargetType="TabItem">
						<!-- Approach from: https://stackoverflow.com/a/10738247/11002708 -->
						<Setter Property="AllowDrop" Value="True"/>
						<EventSetter Event="MouseMove" Handler="TabItem_MouseMove"/>
						<EventSetter Event="Drop" Handler="TabItem_Drop"/>

						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="TabItem">
									<Grid Name="Panel">
										<ContentPresenter x:Name="ContentSite"
											VerticalAlignment="Center"
											HorizontalAlignment="Center"
											ContentSource="Header"
											Margin="1"/>
									</Grid>
									<ControlTemplate.Triggers>
										<MultiTrigger>
											<!-- If selected but no focus, turn lighter shade of grey -->
											<MultiTrigger.Conditions>
												<Condition Property="IsSelected" Value="True" />
												<Condition Property="IsFocused" Value="False" />
											</MultiTrigger.Conditions>
											<MultiTrigger.Setters>
												<Setter TargetName="Panel" Property="Background" Value="#007acc" />
											</MultiTrigger.Setters>
										</MultiTrigger>
										<Trigger Property="IsSelected" Value="True">
											<!-- If selected, turn blue -->
											<Setter TargetName="Panel" Property="Background" Value="#007acc" />
										</Trigger>
										<Trigger Property="IsSelected" Value="False">
											<!-- If not selected, make same color as background -->
											<Setter TargetName="Panel" Property="Background" Value="#2d2d30" />
										</Trigger>
										<MultiTrigger>
											<!-- If not selected and mouse over, turn lighter shade of blue -->
											<MultiTrigger.Conditions>
												<Condition Property="IsMouseOver" Value="True" />
												<Condition Property="IsSelected" Value="False" />
											</MultiTrigger.Conditions>
											<MultiTrigger.Setters>
												<Setter TargetName="Panel" Property="Background" Value="#1c97ea" />
											</MultiTrigger.Setters>
										</MultiTrigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</TabControl.Resources>
				<TabControl.ItemTemplate>
					<DataTemplate>
						<!--
						<StackPanel Margin="2,0" Orientation="Horizontal" Height="22" Width="Auto" VerticalAlignment="Center">
							<TextBlock Margin="5,0" Width="Auto" Text="{Binding Header}" VerticalAlignment="Center" Foreground="White"/>
							<Image Source="Images/Delete2.png" Width="20" Height="20" MouseDown="CloseTabClick" VerticalAlignment="Center"/>
						</StackPanel>
						-->
						<UserControl Content="{Binding Header}" Margin="0" BorderThickness="0"/>
					</DataTemplate>
				</TabControl.ItemTemplate>
				<TabControl.ContentTemplate>
					<DataTemplate>
						<UserControl Content="{Binding Content}" Margin="0" BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
					</DataTemplate>
				</TabControl.ContentTemplate>
			</TabControl>
		</Grid>
	</DockPanel>
</Window>